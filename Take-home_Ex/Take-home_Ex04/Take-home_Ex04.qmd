---
title: "Take-home Exercise 4: Prototyping Modules for Visual Analytics Shiny Application"
author: "Alexei Jason"
date: "February 28, 2024"
date-modified: "last-modified"
execute: 
  eval: true
  echo: true
  warning: false
editor: visual
---

# Data Preparation

## Importing packages

```{r}
pacman::p_load(tidyverse, patchwork, readr, dplyr,ggiraph,forecast, plotly, timetk)
```

## Importing Datasets

```{r}
GDP_growth = read.csv ("data/GDPgrowth.csv")

DT::datatable(GDP_growth, class= "compact")
```

```{r}
GDP_data <- pivot_longer(GDP_growth, cols = starts_with("X"), names_to = "Quarter", values_to = "Growth.Percentage")

# Extract Year and Quarter from the Quarter column
GDP_data <- GDP_data %>%
  mutate(
    Year = str_extract(Quarter, "\\d{4}"),
    Quarter = str_extract(Quarter, "([1-4])Q"),
    Quarter = case_when(
      Quarter == "1Q" ~ "Q1",
      Quarter == "2Q" ~ "Q2",
      Quarter == "3Q" ~ "Q3",
      Quarter == "4Q" ~ "Q4"
    )
  )

# Reorder the columns
GDP_data <- GDP_data %>%
  select(Year, Quarter, Data.Series, `Growth.Percentage`)
```

```{r}
library(dplyr)
library(zoo)

# Assuming GDP_data is your modified dataset with 'Year' and 'Quarter' columns
# Replace "GDP_data" with your dataset name if different

# Combine 'Year' and 'Quarter' columns into a single date format
GDP_data1 <- GDP_data %>%
  mutate(Date = as.yearqtr(paste0(Year, Quarter)))

# Remove 'Year' and 'Quarter' columns as they're redundant now
GDP_data1 <- GDP_data1 %>%
  select(-Year, -Quarter)

# Print the modified dataset
print(GDP_data1)
```

```{r}
ggplot(GDP_data1, aes(x = Date, y = Data.Series, fill = `Growth.Percentage`))om_tile(color = "white") +
  scale_fill_viridis() +
  labs(title = "Heatmap of GDP At Current Market Prices",
       x = "Year",
       y = "Data Series",
       fill = "GDP") +
  theme_minimal() +
  theme(axis.text.x = element_text(angle = 45, vjust = 1, hjust = 1))
```

```{r}
GDP <- GDP_data %>% 
  select(Data.Series, Year, Quarter,Growth.Percentage) %>%
  filter(Year >= 2010, Data.Series == "GDP At Current Market Prices")
```

```{r}
hline.data <- GDP %>% 
  group_by(Quarter) %>%
  summarise(avgvalue = mean(`Growth.Percentage`))
```

```{r}
ggplot() + 
  geom_line(data=GDP,
            aes(x=Year, 
                y=`Growth.Percentage`, 
                group=Quarter), 
            colour="black") +
  geom_hline(aes(yintercept=avgvalue), 
             data=hline.data, 
             linetype=6, 
             colour="red", 
             size=0.5) + 
  facet_grid(~Quarter) +
  labs(axis.text.x = element_blank(),
       title = "Growth Rate of GDP At Current Market Prices from 2010-2023") +
  xlab("") +
  ylab("Growth Percentage") +
  theme(axis.text.x = element_text(angle = 90, vjust = 0.5))
```

```{r}

```

## Nowcast

## Dashboard Design Prototype

![](images/UI-Nowcasted.png)

![](images/UI-Historical.png)
