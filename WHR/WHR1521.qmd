---
title: "WHR 2015-2021"
---

# Data Preparation

## Importing packages

```{r}
pacman::p_load(skimr,tidyverse, patchwork, readr, dplyr, plotly, ggridges, ggiraph, ggthemes,corrplot,GGally)
```

## Importing Datasets

```{r}
WHRdata2015 = read.csv ("data/2015.csv")
WHRdata2016 = read.csv ("data/2016.csv")
WHRdata2017 = read.csv ("data/2017.csv")
WHRdata2018 = read.csv ("data/2018.csv")
WHRdata2019 = read.csv ("data/2019.csv")
WHRdata2020 = read.csv ("data/2020.csv")
WHRdata2021 = read.csv ("data/2021.csv")

head(WHRdata2019)
```

```{r}
WHRdata2021=plyr::rename(WHRdata2021, replace = c( "Country.name"="Country", 
                                                   "Rank"="Happiness.Rank" ,
                                  "Regional.indicator"="Region" ,
                                  "Ladder.score" = "Happiness.Score",
                                  "Explained.by..Log.GDP.per.capita"="Economy..GDP.per.Capita.", 
                                  "Explained.by..Social.support" = "Family",
                                  "Explained.by..Healthy.life.expectancy"="Health..Life.Expectancy.",
                                  "Explained.by..Freedom.to.make.life.choices"="Freedom",
                                  "Explained.by..Perceptions.of.corruption"="Trust..Government.Corruption.", "Explained.by..Generosity" = "Generosity", 
                                  "Dystopia...residual"="Dystopia.Residual"
                                  
                                  ))
colnames(WHRdata2021)
```

```{r}
WHRdata2020=plyr::rename(WHRdata2020, replace = c( "Country.name"="Country", 
                                  "Regional.indicator"="Region" ,
                                  "Rank"="Happiness.Rank" ,
                                  "Ladder.score" = "Happiness.Score",
                                  "Explained.by..Log.GDP.per.capita"="Economy..GDP.per.Capita.", 
                                  "Explained.by..Social.support" = "Family",
                                  "Explained.by..Healthy.life.expectancy"="Health..Life.Expectancy.",
                                  "Explained.by..Freedom.to.make.life.choices"="Freedom",
                                  "Explained.by..Perceptions.of.corruption"="Trust..Government.Corruption.", "Explained.by..Generosity" = "Generosity", 
                                  "Dystopia...residual"="Dystopia.Residual"
                                  
                                  ))
colnames(WHRdata2020)
```

```{r}
WHRdata2019=plyr::rename(WHRdata2019, replace = c( "Country.or.region"="Country", 
                                  "Overall.rank"="Happiness.Rank" ,
                                  "GDP.per.capita"="Economy..GDP.per.Capita.",
                                  "Healthy.life.expectancy"="Health..Life.Expectancy.",
                                  "Freedom.to.make.life.choices"="Freedom",
                                  "Perceptions.of.corruption"="Trust..Government.Corruption.",
                                  "Social.support"="Family",
                                  "Score"="Happiness.Score"))
colnames(WHRdata2019)
```

```{r}
WHRdata2018=plyr::rename(WHRdata2018, replace = c( "Country.or.region"="Country", 
                                  "Overall.rank"="Happiness.Rank" ,
                                  "GDP.per.capita"="Economy..GDP.per.Capita.",
                                  "Healthy.life.expectancy"="Health..Life.Expectancy.",
                                  "Freedom.to.make.life.choices"="Freedom",
                                  "Perceptions.of.corruption"="Trust..Government.Corruption.",
                                  "Social.support"="Family",
                                  "Score"="Happiness.Score"))
colnames(WHRdata2018)
```

```{r}
WHRdata2015=plyr::rename(WHRdata2015, replace = c( "Happiness Rank" = "Happiness.Rank", 
                                  "Happiness Score" = "Happiness.Score",
                                  "Economy (GDP per Capita)" = "Economy..GDP.per.Capita.",
                                  "Health (Life Expectancy)" = "Health..Life.Expectancy.",
                                  "Trust (Government Corruption)" = "Trust..Government.Corruption.",
                                  "Dystopia Residual"="Dystopia.Residual"
                                  ))
colnames(WHRdata2015)
```

```{r}
WHRdata2016=plyr::rename(WHRdata2016, replace = c( "Happiness Rank" = "Happiness.Rank", 
                                  "Happiness Score" = "Happiness.Score",
                                  "Economy (GDP per Capita)" = "Economy..GDP.per.Capita.",
                                  "Health (Life Expectancy)" = "Health..Life.Expectancy.",
                                  "Trust (Government Corruption)"  = "Trust..Government.Corruption.",
                                  "Dystopia Residual"="Dystopia.Residual"
                                  ))
colnames(WHRdata2016)
```

```{r}
WHRdata2015<-cbind(Year=2015,WHRdata2015)

WHRdata2016<-cbind(Year=2016,WHRdata2016)

WHRdata2017<-cbind(Year=2017,WHRdata2017)

WHRdata2018<-cbind(Year=2018,WHRdata2018)

WHRdata2019<-cbind(Year=2019,WHRdata2019)

WHRdata2020<-cbind(Year=2020,WHRdata2020)

WHRdata2021<-cbind(Year=2021,WHRdata2021)
```

```{r}
WHRdata2018$Trust..Government.Corruption. = as.numeric(WHRdata2018$Trust..Government.Corruption.)

str(WHRdata2018)
```

```{r}
WHRdata20152016<-dplyr::bind_rows(WHRdata2015,WHRdata2016)

WHRdata201520162017<-dplyr::bind_rows(WHRdata20152016,WHRdata2017)

WHRdata20182019<-dplyr::bind_rows(WHRdata2018,WHRdata2019)

WHRdata20202021<-dplyr::bind_rows(WHRdata2020,WHRdata2021)

WHRdata1<-dplyr::bind_rows(WHRdata201520162017,WHRdata20182019)

WHRdata<-dplyr::bind_rows(WHRdata1,WHRdata20202021)
head(WHRdata)
```

```{r}
WHRdata$Happiness.Rank  = as.numeric(WHRdata$Happiness.Rank )

str(WHRdata)
```

```{r}
colSums(is.na(WHRdata))
```

```{r}
WHRdata = subset(WHRdata, select = -c(Lower.Confidence.Interval,Upper.Confidence.Interval,Dystopia.Residual,Standard.Error,Whisker.high,Whisker.low, Standard.error.of.ladder.score, upperwhisker, lowerwhisker ))

colSums(is.na(WHRdata))
```

```{r}
WHRdata$Trust..Government.Corruption.[is.na(WHRdata$Trust..Government.Corruption.)] <- median(WHRdata$Trust..Government.Corruption., na.rm = T)

WHRdata$Generosity[is.na(WHRdata$Generosity)] <- median(WHRdata$Generosity, na.rm = T)

WHRdata$Health..Life.Expectancy.[is.na(WHRdata$Health..Life.Expectancy.)] <- median(WHRdata$Health..Life.Expectancy., na.rm = T)

WHRdata$Family [is.na(WHRdata$Family )] <- median(WHRdata$Family , na.rm = T)
WHRdata$Freedom [is.na(WHRdata$Freedom )] <- median(WHRdata$Freedom , na.rm = T)
WHRdata$Economy..GDP.per.Capita. [is.na(WHRdata$Economy..GDP.per.Capita. )] <- median(WHRdata$Economy..GDP.per.Capita. , na.rm = T)


colSums(is.na(WHRdata))
```

```{r}
aggregate(WHRdata$Country, by=list(WHRdata$Year), FUN=length)
```

```{r}
Country_2015 = subset(WHRdata, Year == 2015)$Country
Country_2016 = subset(WHRdata, Year == 2016)$Country
Country_2017 = subset(WHRdata, Year == 2017)$Country
Country_2018 = subset(WHRdata, Year == 2018)$Country
Country_2019 = subset(WHRdata, Year == 2019)$Country
Country_2020 = subset(WHRdata, Year == 2020)$Country
Country_2021 = subset(WHRdata, Year == 2021)$Country
```

```{r}
common_country =intersect(intersect(intersect(intersect(intersect(intersect(Country_2015,
Country_2016),Country_2017),Country_2018),Country_2019),Country_2020),Country_2021)
length(common_country)
```

```{r}
WHRdata_cleaned = subset(WHRdata,Country %in% common_country)
print(paste("The amount of rows in the dataset is: ",dim(WHRdata_cleaned)[1]))
print(paste("The amount of columns in the dataset is: ",dim(WHRdata_cleaned)[2]))
```

```{r}
common_region <- unique(subset(WHRdata_cleaned, Region!="NA", c(Country, Region)))

head(common_country)
```

```{r}
assign_region <- function(x){
  Region <- common_region$Region[common_region$Country == x]
}

for(country in common_country)
      WHRdata_cleaned$Region[WHRdata_cleaned$Country == country] <- assign_region(country)
```

```{r}
WHRdata_cleaned=plyr::rename(WHRdata_cleaned, replace = c( 
                                  "Economy..GDP.per.Capita."="GDP.per.Capita",
                                  "Health..Life.Expectancy."="Healthy.Life.Expectancy",
                                  "Trust..Government.Corruption."="Perceptions.of.Corruption",
                                  "Family"="Social.Support"))
colnames(WHRdata_cleaned)
```

```{r}

skimr::skim_without_charts(WHRdata_cleaned)
```

# Data

```{r}

colSums(is.na(WHRdata_cleaned))
```

```{r}
DT::datatable(WHRdata_cleaned, class= "compact")
```

```{r}
aggregate(WHRdata_cleaned$Country, by=list(WHRdata_cleaned$Year), FUN=length)
```

```{r}
write_csv(WHRdata_cleaned, file = "World Happiness Data (2015-2021)_cleaned.csv")
```

# Scatter Plot

## GDP

```{r}
scp1 = ggplot(WHRdata_cleaned, aes(x = GDP.per.Capita, y = Happiness.Score)) + 
  geom_point(size = .5, alpha = 0.8) +  
  geom_smooth(method = "lm", fullrange = TRUE) +
  theme_bw() + labs(title = "Scatter plot with regression line")

scp1a= ggplot(WHRdata_cleaned, aes(x = GDP.per.Capita, y = Happiness.Score)) + 
  geom_point(aes(color=Region), size = .5, alpha = 0.8) +  
  geom_smooth(aes(color = Region, fill = Region), 
              method = "lm", fullrange = TRUE) +
  facet_wrap(~Region) +
  theme_bw() + labs(title = "Scatter plot with regression line")

scp1
scp1a
```

## Social Support

```{r}
scp2 = ggplot(WHRdata_cleaned, aes(x = Social.Support, y = Happiness.Score)) + 
  geom_point(size = .5, alpha = 0.8) +  
  geom_smooth(method = "lm", fullrange = TRUE) +
  theme_bw() + labs(title = "Scatter plot with regression line")

scp2a = ggplot(WHRdata_cleaned, aes(x = Social.Support, y = Happiness.Score)) + 
  geom_point(aes(color=Region), size = .5, alpha = 0.8) +  
  geom_smooth(aes(color = Region, fill = Region), 
              method = "lm", fullrange = TRUE) +
  facet_wrap(~Region) +
  theme_bw() + labs(title = "Scatter plot with regression line")

scp2
scp2a
```

## Life Expectancy

```{r}
scp3 = ggplot(WHRdata_cleaned, aes(x = Healthy.Life.Expectancy, y = Happiness.Score)) + 
  geom_point(size = .5, alpha = 0.8) +  
  geom_smooth(method = "lm", fullrange = TRUE) +
  theme_bw() + labs(title = "Scatter plot with regression line")

scp3a = ggplot(WHRdata_cleaned, aes(x = Healthy.Life.Expectancy, y = Happiness.Score)) + 
  geom_point(aes(color=Region), size = .5, alpha = 0.8) +  
  geom_smooth(aes(color = Region, fill = Region), 
              method = "lm", fullrange = TRUE) +
  facet_wrap(~Region) +
  theme_bw() + labs(title = "Scatter plot with regression line")

scp3
scp3a
```

## Freedom

```{r}
scp4 = ggplot(WHRdata_cleaned, aes(x =Freedom, y = Happiness.Score)) + 
  geom_point(size = .5, alpha = 0.8) +  
  geom_smooth(method = "lm", fullrange = TRUE) +
  theme_bw() + labs(title = "Scatter plot with regression line")

scp4a = ggplot(WHRdata_cleaned, aes(x =Freedom, y = Happiness.Score)) + 
  geom_point(aes(color=Region), size = .5, alpha = 0.8) +  
  geom_smooth(aes(color = Region, fill = Region), 
              method = "lm", fullrange = TRUE) +
  facet_wrap(~Region) +
  theme_bw() + labs(title = "Scatter plot with regression line")

scp4
scp4a
```

## Corruption

```{r}
scp5 = ggplot(WHRdata_cleaned, aes(x = Perceptions.of.Corruption, y = Happiness.Score)) + 
  geom_point(size = .5, alpha = 0.8) +  
  geom_smooth(method = "lm", fullrange = TRUE) +
  theme_bw() + labs(title = "Scatter plot with regression line")

scp5a = ggplot(WHRdata_cleaned, aes(x = Perceptions.of.Corruption, y = Happiness.Score)) + 
  geom_point(aes(color=Region), size = .5, alpha = 0.8) +  
  geom_smooth(aes(color = Region, fill = Region), 
              method = "lm", fullrange = TRUE) +
  facet_wrap(~Region) +
  theme_bw() + labs(title = "Scatter plot with regression line")

scp5
scp5a
```

## Generosity

```{r}
scp6 = ggplot(WHRdata_cleaned, aes(x = Generosity, y = Happiness.Score)) + 
  geom_point(size = .5, alpha = 0.8) +  
  geom_smooth(method = "lm", fullrange = TRUE) +
  theme_bw() + labs(title = "Scatter plot with regression line")

scp6a = ggplot(WHRdata_cleaned, aes(x = Generosity, y = Happiness.Score)) + 
  geom_point(aes(color=Region), size = .5, alpha = 0.8) +  
  geom_smooth(aes(color = Region, fill = Region), 
              method = "lm", fullrange = TRUE) +
  facet_wrap(~Region) +
  theme_bw() + labs(title = "Scatter plot with regression line")

scp6
scp6a
```

# Correlation Matrix

```{r}
dataset = select(WHRdata_cleaned,-c("Year","Country","Happiness.Rank","Region"))
head(dataset)
```

```{r}
Num.cols <- sapply(dataset, is.numeric)
Cor.data <- cor(dataset[, Num.cols])

corrplot(Cor.data, method = 'color') 
```

```{r}
ggcorr(dataset, label = TRUE, label_round = 2, label_size = 3.5, size = 2, hjust = .85) +
  ggtitle("Correlation Heatmap") +
  theme(plot.title = element_text(hjust = 0.5))
```
